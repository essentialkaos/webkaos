user  webkaos;

worker_processes      auto;
worker_rlimit_nofile  65536;
worker_priority       -1;

pcre_jit              on;

include modules.conf;

error_log  /var/log/webkaos/error.log warn;
pid        /var/run/webkaos.pid;

events {
  worker_connections  8192;
}

stream {
  include stream.conf.d/*.conf;
}

http {
  server_tokens  off;

  include       /etc/webkaos/mime.types;
  default_type  application/octet-stream;

  log_format main '[$request_id] $remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/webkaos/access.log main;

  sendfile              on;
  tcp_nopush            on;
  tcp_nodelay           off;
  ssi                   off;

  client_body_timeout          15s;
  client_header_timeout        15s;
  client_header_buffer_size    1k;
  keepalive_timeout            30s;
  send_timeout                 15s;
  large_client_header_buffers  4 16k;

  server_names_hash_max_size    1024;
  server_names_hash_bucket_size 64;

  gzip               on;
  gzip_http_version  1.0;
  gzip_comp_level    5;
  gzip_min_length    1024;
  gzip_proxied       any;
  gzip_vary          on;
  gzip_proxied       expired no-cache no-store private auth;
  gzip_disable       "MSIE [1-6]\.";
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/rss+xml
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/svg+xml
    image/x-icon
    text/css
    text/plain
    text/x-component;

  resolver                   1.1.1.1 8.8.8.8 valid=300s;
  resolver_timeout           10s;

  server {
    listen         80 default_server;
    server_name    _;

    location / {
      root /usr/share/webkaos/html;
    }

    location /mh {
      more_set_headers "Server: bibop";
      return 200;
    }

    location /lua {
      content_by_lua_block {
        ngx.say("LUA MODULE WORKS")
      }
    }
  }

  server {
    listen         443 ssl;
    http2          on;
    server_name    _;

    ssl_dyn_rec_enable on;

    ssl_certificate /etc/webkaos/ssl/ssl.crt;
    ssl_certificate_key /etc/webkaos/ssl/ssl.key;

    location / {
      root /usr/share/webkaos/html;
    }

    location /mh {
      more_set_headers "Server: bibop";
      return 200;
    }

    location /lua {
      content_by_lua_block {
        ngx.say("LUA MODULE WORKS")
      }
    }
  }

  include conf.d/*.conf;
}
