# Bibop recipe for webkaos (EL8/EL9)
# See more: https://kaos.sh/bibop

pkg webkaos webkaos-debug webkaos-nginx

require-root yes
unsafe-actions yes
https-skip-verify yes

var service_name webkaos
var user_name webkaos
var prefix_dir /etc/webkaos
var config {prefix_dir}/webkaos.conf
var extra_config_dir {prefix_dir}/xtra
var binary /usr/sbin/webkaos
var pid_file /var/run/webkaos.pid
var ssl_dir {prefix_dir}/ssl
var dh_param {ssl_dir}/dhparam.pem
var log_dir /var/log/webkaos

var lua_ver 2.1
var lua_dir /usr/share/webkaos/luajit/share/luajit-{lua_ver}

command "-" "System environment validation"
  user-exist {user_name}
  group-exist {user_name}
  service-present {service_name}
  service-enabled {service_name}
  exist {config}
  exist {log_dir}

command "-" "Debug version"
  exist {binary}.debug
  service-present webkaos-debug

command "webkaos -v" "Check version info"
  wait-output 1.0
  output-match "webkaos version: webkaos\/\d\.\d+\.\d+"

command "webkaos -t" "Validate default config"
  exit 0
  output-contains "webkaos: the configuration file /etc/webkaos/webkaos.conf syntax is ok"

command "-" "Check linking with LuaJIT"
  lib-rpath {binary} /usr/share/webkaos/luajit/lib
  lib-linked {binary} "libluajit-5.1.so.*"

command "-" "Check Resty core and lrucache"
  dir {lua_dir}/ngx
  dir {lua_dir}/ngx/ssl
  dir {lua_dir}/resty
  dir {lua_dir}/resty/core
  dir {lua_dir}/resty/lrucache

  exist {lua_dir}/ngx/balancer.lua
  exist {lua_dir}/ngx/base64.lua
  exist {lua_dir}/ngx/errlog.lua
  exist {lua_dir}/ngx/ocsp.lua
  exist {lua_dir}/ngx/pipe.lua
  exist {lua_dir}/ngx/process.lua
  exist {lua_dir}/ngx/re.lua
  exist {lua_dir}/ngx/req.lua
  exist {lua_dir}/ngx/resp.lua
  exist {lua_dir}/ngx/semaphore.lua
  exist {lua_dir}/ngx/ssl.lua
  exist {lua_dir}/ngx/ssl/session.lua
  exist {lua_dir}/resty/core.lua
  exist {lua_dir}/resty/lrucache.lua
  exist {lua_dir}/resty/core/base.lua
  exist {lua_dir}/resty/core/base64.lua
  exist {lua_dir}/resty/core/ctx.lua
  exist {lua_dir}/resty/core/exit.lua
  exist {lua_dir}/resty/core/hash.lua
  exist {lua_dir}/resty/core/misc.lua
  exist {lua_dir}/resty/core/ndk.lua
  exist {lua_dir}/resty/core/phase.lua
  exist {lua_dir}/resty/core/regex.lua
  exist {lua_dir}/resty/core/request.lua
  exist {lua_dir}/resty/core/response.lua
  exist {lua_dir}/resty/core/shdict.lua
  exist {lua_dir}/resty/core/socket.lua
  exist {lua_dir}/resty/core/time.lua
  exist {lua_dir}/resty/core/uri.lua
  exist {lua_dir}/resty/core/utils.lua
  exist {lua_dir}/resty/core/var.lua
  exist {lua_dir}/resty/core/worker.lua
  exist {lua_dir}/resty/lrucache/pureffi.lua

  mode {lua_dir}/ngx/balancer.lua 644
  mode {lua_dir}/ngx/base64.lua 644
  mode {lua_dir}/ngx/errlog.lua 644
  mode {lua_dir}/ngx/ocsp.lua 644
  mode {lua_dir}/ngx/pipe.lua 644
  mode {lua_dir}/ngx/process.lua 644
  mode {lua_dir}/ngx/re.lua 644
  mode {lua_dir}/ngx/req.lua 644
  mode {lua_dir}/ngx/resp.lua 644
  mode {lua_dir}/ngx/semaphore.lua 644
  mode {lua_dir}/ngx/ssl.lua 644
  mode {lua_dir}/ngx/ssl/session.lua 644
  mode {lua_dir}/resty/core.lua 644
  mode {lua_dir}/resty/lrucache.lua 644
  mode {lua_dir}/resty/core/base.lua 644
  mode {lua_dir}/resty/core/base64.lua 644
  mode {lua_dir}/resty/core/ctx.lua 644
  mode {lua_dir}/resty/core/exit.lua 644
  mode {lua_dir}/resty/core/hash.lua 644
  mode {lua_dir}/resty/core/misc.lua 644
  mode {lua_dir}/resty/core/ndk.lua 644
  mode {lua_dir}/resty/core/phase.lua 644
  mode {lua_dir}/resty/core/regex.lua 644
  mode {lua_dir}/resty/core/request.lua 644
  mode {lua_dir}/resty/core/response.lua 644
  mode {lua_dir}/resty/core/shdict.lua 644
  mode {lua_dir}/resty/core/socket.lua 644
  mode {lua_dir}/resty/core/time.lua 644
  mode {lua_dir}/resty/core/uri.lua 644
  mode {lua_dir}/resty/core/utils.lua 644
  mode {lua_dir}/resty/core/var.lua 644
  mode {lua_dir}/resty/core/worker.lua 644
  mode {lua_dir}/resty/lrucache/pureffi.lua 644

command "-" "Check extra configs"
  exist {extra_config_dir}/bots.conf
  exist {extra_config_dir}/common.conf
  exist {extra_config_dir}/ssl.conf
  exist {extra_config_dir}/ssl-wildcard.conf

  mode {extra_config_dir}/bots.conf 644
  mode {extra_config_dir}/common.conf 644
  mode {extra_config_dir}/ssl.conf 644
  mode {extra_config_dir}/ssl-wildcard.conf 644

command "-" "Check Nginx compatibility package"
  exist /etc/nginx
  exist /var/log/nginx
  exist /etc/nginx/nginx.conf
  exist /usr/sbin/nginx
  service-present nginx
  service-present nginx-debug

command "nginx -v" "Check nginx wrapper version info"
  wait-output 1.0
  output-match "nginx version: nginx\/\d\.\d+\.\d+"

command "nginx -t" "Validate default config using nginx wrapper"
  exit 0

command "-" "Original configuration backup"
  backup {config}

command "-" "Replace original configuration"
  copy webkaos.conf {config}

command "-" "Add test DH params file"
  copy dhparam.pem {dh_param}
  chmod {dh_param} 600

command "-" "Add self-signed certificate"
  copy ssl.key {ssl_dir}/ssl.key
  copy ssl.crt {ssl_dir}/ssl.crt
  chmod {ssl_dir}/ssl.key 600
  chmod {ssl_dir}/ssl.crt 600

command "webkaos -t" "Validate test configuration"
  exit 0

command "-" "Clear old log files"
  touch {log_dir}/access.log
  touch {log_dir}/error.log
  truncate {log_dir}/access.log
  truncate {log_dir}/error.log

command "systemctl start {service_name}" "Start service"
  wait-pid {pid_file} 5
  service-works {service_name}

command "-" "Make HTTP requests"
  http-set-header Accept-Encoding "gzip, deflate"
  http-status GET "http://127.0.0.1" 200
  http-header GET "http://127.0.0.1" server webkaos
  http-header GET "http://127.0.0.1/mh" server bibop
  http-contains GET "http://127.0.0.1/lua" "LUA MODULE WORKS"
  !empty {log_dir}/access.log
  truncate {log_dir}/access.log

command "-" "Make HTTPS requests"
  http-set-header Accept-Encoding "gzip, deflate"
  http-status GET "https://127.0.0.1" 200
  http-header GET "https://127.0.0.1" server webkaos
  http-header GET "https://127.0.0.1/mh" server bibop
  http-contains GET "https://127.0.0.1/lua" "LUA MODULE WORKS"
  !empty {log_dir}/access.log
  truncate {log_dir}/access.log

command "-" "Save PID file checksum"
  checksum-read {pid_file} pid_sha

command "service {service_name} upgrade" "Binary upgrade"
  wait 3
  exist {pid_file}
  service-works {service_name}
  http-status GET "http://127.0.0.1" 200
  !checksum {pid_file} {pid_sha}

command "-" "Update configuration to broken one"
  copy broken.conf {config}

command "service {service_name} check" "Broken config check"
  !exit 0
  !empty {log_dir}/error.log

command "service {service_name} reload" "Broken config reload"
  !exit 0

command "-" "Restore working configuration"
  copy webkaos.conf {config}

command "service {service_name} reload" "Reload with original config"
  exit 0

command "systemctl stop {service_name}" "Stop service"
  !wait-pid {pid_file} 5
  !service-works {service_name}
  !connect tcp ":http"
  !exist {pid_file}

command "-" "Clear old log files"
  truncate {log_dir}/access.log
  truncate {log_dir}/error.log

command "systemctl start {service_name}-debug" "Start debug version of service"
  wait-pid {pid_file} 5
  service-works {service_name}-debug

command "-" "Make HTTP requests"
  http-set-header Accept-Encoding "gzip, deflate"
  http-status GET "http://127.0.0.1" 200
  http-header GET "http://127.0.0.1" server webkaos
  http-header GET "http://127.0.0.1/mh" server bibop
  http-contains GET "http://127.0.0.1/lua" "LUA MODULE WORKS"
  !empty {log_dir}/access.log
  truncate {log_dir}/access.log

command "-" "Make HTTPS requests"
  http-set-header Accept-Encoding "gzip, deflate"
  http-status GET "https://127.0.0.1" 200
  http-header GET "https://127.0.0.1" server webkaos
  http-header GET "https://127.0.0.1/mh" server bibop
  http-contains GET "https://127.0.0.1/lua" "LUA MODULE WORKS"
  !empty {log_dir}/access.log
  truncate {log_dir}/access.log

command "systemctl stop {service_name}-debug" "Stop debug version of service"
  !wait-pid {pid_file} 5
  !service-works {service_name}-debug
  !connect tcp ":http"
  !exist {pid_file}

command:teardown "-" "Configuration restore"
  backup-restore {config}

command:teardown "-" "DH param cleanup"
  remove {dh_param}

command:teardown "-" "Logs cleanup"
  truncate {log_dir}/access.log
  truncate {log_dir}/error.log

command:teardown "-" "Self-signed certificate cleanup"
  remove {ssl_dir}/ssl.key
  remove {ssl_dir}/ssl.crt
